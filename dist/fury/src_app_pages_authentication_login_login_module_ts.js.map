{"version":3,"file":"src_app_pages_authentication_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/authentication/login/login-routing.module.ts","./src/app/pages/authentication/login/login.component.ts","./src/app/pages/authentication/login/login.component.html","./src/app/pages/authentication/login/login.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { fadeInUpAnimation } from '../../../../@fury/animations/fade-in-up.animation';\n\n@Component({\n  selector: 'fury-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  animations: [fadeInUpAnimation]\n})\nexport class LoginComponent implements OnInit {\n\n  form: UntypedFormGroup;\n\n  inputType = 'password';\n  visible = false;\n\n  constructor(private router: Router,\n              private fb: UntypedFormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar\n  ) {\n  }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  send() {\n    this.router.navigate(['/']);\n    this.snackbar.open('Lucky you! Looks like you didn\\'t need a password or email address! For a real application we provide validators to prevent this. ;)', 'THANKS', {\n      duration: 10000\n    });\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n}\n","<div class=\"page background-pattern\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div [@fadeInUp] class=\"card border-radius elevation\">\n    <div class=\"header padding background-primary\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div class=\"logo fill-primary-contrast\">\n        <svg viewBox=\"0 0 33.74 33.99\" xmlns=\"http://www.w3.org/2000/svg\"><title>icon</title>\n          <path d=\"M26.83,19.33c-.36.37-.73.71-1.09,1l.31,3.22a5.41,5.41,0,0,1-2.43,5.14L15.72,34l-.67-8.74a6.54,6.54,0,0,1-6.57-6.53L0,18.18l5-7.93a5.41,5.41,0,0,1,5.23-2.54l3.1.31q.49-.55,1.05-1.11C20.78.54,30.82-.62,33.48.26,34.37,2.93,33.2,13,26.83,19.33Zm-.45-12a3.77,3.77,0,1,0,0,5.33A3.77,3.77,0,0,0,26.38,7.36ZM2.82,23.72l3.24-3.24a8.24,8.24,0,0,0,7.11,7.1L10.5,30.25,7.74,33V29.46L2.41,31.23l1.78-5.32H.64Z\"></path>\n        </svg>\n      </div>\n    </div>\n    <div class=\"padding\" fxLayout=\"column\" fxLayoutGap=\"16px\" [formGroup]=\"form\">\n      <div fxFlex=\"auto\" fxLayout=\"column\">\n        <mat-form-field fxFlex=\"grow\">\n          <mat-label>E-Mail</mat-label>\n          <input matInput required formControlName=\"email\">\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">We need an email address to log you in</mat-error>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"grow\">\n          <mat-label>Password</mat-label>\n          <input matInput [type]=\"inputType\" formControlName=\"password\" required>\n          <button type=\"button\" mat-icon-button matSuffix (click)=\"toggleVisibility()\" matTooltip=\"Toggle Visibility\">\n            <mat-icon *ngIf=\"visible\">visibility</mat-icon>\n            <mat-icon *ngIf=\"!visible\">visibility_off</mat-icon>\n          </button>\n          <mat-hint>Click the eye to toggle visibility</mat-hint>\n          <mat-error *ngIf=\"form.get('password').hasError('required')\">We need a password to log you in</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <mat-checkbox class=\"caption\">Remember Me</mat-checkbox>\n        <a class=\"caption\" [routerLink]=\"['/forgot-password']\">Forgot Password?</a>\n      </div>\n      <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"send()\">\n        SIGN IN\n      </button>\n      <p class=\"secondary-text text-center\">\n        Don't have an account?<br/>\n        <a [routerLink]=\"['/register']\">Click here to create one</a>\n      </p>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../../../../@fury/shared/material-components.module';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class LoginModule {\n}\n"],"names":["RouterModule","LoginComponent","routes","path","component","LoginRoutingModule","_","_2","_3","forChild","imports","i1","exports","Validators","fadeInUpAnimation","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","constructor","router","fb","cd","snackbar","inputType","visible","ngOnInit","form","group","email","required","password","send","navigate","open","duration","toggleVisibility","markForCheck","ɵɵdirectiveInject","Router","i2","UntypedFormBuilder","ChangeDetectorRef","i3","MatSnackBar","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","ɵɵtemplate","LoginComponent_mat_error_14_Template","ɵɵlistener","LoginComponent_Template_button_click_19_listener","LoginComponent_mat_icon_20_Template","LoginComponent_mat_icon_21_Template","LoginComponent_mat_error_24_Template","LoginComponent_Template_button_click_30_listener","ɵɵadvance","ɵɵproperty","undefined","get","hasError","ɵɵpureFunction0","_c0","_c1","CommonModule","ReactiveFormsModule","MaterialModule","LoginModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}